name: Deploy to NCP Server
on:
  push:
    branches: [ "main" ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ringgo:latest
        
    - name: Deploy to NCP Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NCP_SERVER_IP }}
        username: ${{ secrets.NCP_SERVER_USERNAME }}
        password: ${{ secrets.NCP_SERVER_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ringgo:latest
          docker stop ringgo || true
          docker rm ringgo || true
          docker run -d --name ringgo \
            --add-host="${{ secrets.SPRING_DATA_REDIS_HOST }}:${{ secrets.REDIS_IP }}" \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
            -e SPRING_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }} \
            -e SPRING_KAFKA_CONSUMER_GROUP_ID=${{ secrets.SPRING_KAFKA_CONSUMER_GROUP_ID }} \
            -e SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest \
            -e SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer \
            -e SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer \
            -e SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer \
            -e SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer \
            -e SPRING_DATA_REDIS_HOST=${{ secrets.SPRING_DATA_REDIS_HOST }} \
            -e SPRING_DATA_REDIS_PORT=${{ secrets.SPRING_DATA_REDIS_PORT }} \
            -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
            -e SPRING_JPA_SHOW_SQL=true \
            -e LOGGING_LEVEL_ORG_HIBERNATE_SQL=DEBUG \
            ${{ secrets.DOCKERHUB_USERNAME }}/ringgo:latest
